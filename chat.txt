def execute_payload(payload: Dict) -> Dict:
    """执行单个payload请求"""
    try:
        execution_plan = payload["service_params"]["job_object"]["execution_plan"]
        category, api_url = determine_scanner_category(execution_plan)
        
        response = requests.post(
            url=api_url,
            json=payload,
            headers={"Content-Type": "application/json"},
            timeout=300
        )
        
        return {
            "status": "success",
            "category": category,
            "status_code": response.status_code,
            "response": response.json(),
            "payload_id": payload["job_params"]["jobid"]
        }
    except Exception as e:
        return {
            "status": "error",
            "error": str(e),
            "payload_id": payload["job_params"].get("jobid", "unknown")
        }


{'EncryptionDetector': {}, 'FormatCheck': {'format_list': ['jpg', 'png', 'PNG', 'jpeg', 'tif', 'tiff', 'gif', 'bmp']}, 'SoftwareCheck': {'software_blacklist': ['', 'Photoshop', 'Corel', 'PhotoScape', 'PhotoPlus', 'GIMP', 'Pixelmator', 'Illustrator', 'Windows Photo Editor', 'ilovepdf']}}

{'job_params': {'jobid': 'JID-54ca58ba-c495-11ed-b20c-0a586e830578', 'task_id': 'TID-54ca58ba-c495-11ed-b20c-0a586e830578', 'app_name': 'synthesizer', 'use_case': 'aadhar_redact'}, 'service_params': {'callback_url': 'http://service-swoosh-orchestrator.swoosh-dev.svc.cluster.local:8889/api/v1/callback', 'job_object': {'io': 'i', 'policy_id': '002_file_bounding_policy', 'data': 'C:\\Users\\1657820\\Desktop\\test_imgs\\006.jpg', 'data_type': 'image', 'execution_plan': {'EncryptionDetector': {}, 'FormatCheck': {'format_list': ['jpg', 'png', 'PNG', 'jpeg', 'tif', 'tiff', 'gif', 'bmp']}, 'SoftwareCheck': {'software_blacklist': ['', 'Photoshop', 'Corel', 'PhotoScape', 'PhotoPlus', 'GIMP', 'Pixelmator', 'Illustrator', 'Windows Photo Editor', 'ilovepdf']}}, 'data_id': 'service_params.job_object.output_img_path'}}}

{'error_code': '', 'error_message': '', 'result': [{'NSTP': True, 'prediction': {'is_protected': False}, 'sanitized_data': None, 'scanner_nm': 'encryption_detector', 'score': 0}, {'NSTP': False, 'prediction': {'format': 'valid format'}, 'sanitized_data': None, 'scanner_nm': 'format_check', 'score': 1}, {'NSTP': False, 'prediction': {'software_check': 'Potentially not tampered, Software used for creation is V'}, 'sanitized_data': None, 'scanner_nm': 'software_check', 'score': 1}], 'status': 'execute completed'}
