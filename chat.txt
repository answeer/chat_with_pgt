import re
import datetime

def validate(value, vtype):
    """
    使用正则表达式验证多种格式
    :param value: 需要验证的字符串
    :param vtype: 验证类型 ('email', 'date', 'phone', 'username', 'password', 'url')
    :return: 验证结果 (布尔值)
    """
    if not isinstance(value, str):
        return False

    # 邮箱：标准邮箱格式
    if vtype == 'email':
        pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        return bool(re.match(pattern, value))
    
    # 日期：YYYY-MM-DD格式（支持1900-2099年）
    elif vtype == 'date':
        # 先验证格式
        if not re.match(r'^(19|20)\d{2}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$', value):
            return False
        
        # 再验证日期有效性（避免2023-02-30这种非法日期）
        try:
            year, month, day = map(int, value.split('-'))
            datetime.datetime(year, month, day)
            return True
        except ValueError:
            return False
    
    # 手机号：中国大陆11位手机号（1开头）
    elif vtype == 'phone':
        pattern = r'^1[3-9]\d{9}$'
        return bool(re.match(pattern, value))
    
    # 用户名：4-20位字母数字下划线（支持中文）
    elif vtype == 'username':
        pattern = r'^[\u4e00-\u9fa5a-zA-Z0-9_]{4,20}$'
        return bool(re.match(pattern, value))
    
    # 密码：6-20位，包含字母、数字和特殊符号中至少两种
    elif vtype == 'password':
        # 长度检查
        if len(value) < 6 or len(value) > 20:
            return False
        
        # 检查字符类型
        has_letter = bool(re.search(r'[a-zA-Z]', value))
        has_digit = bool(re.search(r'\d', value))
        has_special = bool(re.search(r'[^a-zA-Z0-9]', value))
        
        # 至少满足两种类型
        return sum([has_letter, has_digit, has_special]) >= 2
    
    # URL：支持http/https/ftp协议
    elif vtype == 'url':
        pattern = r'^(https?|ftp)://[^\s/$.?#].[^\s]*$'
        return bool(re.match(pattern, value))
    
    return False


# 测试示例
if __name__ == "__main__":
    print(validate('test@example.com', 'email'))      # True
    print(validate('invalid.email@com', 'email'))     # False
    print()
    
    print(validate('2023-02-28', 'date'))            # True
    print(validate('2023-02-30', 'date'))            # False（无效日期）
    print(validate('1999-13-01', 'date'))            # False（无效月份）
    print()
    
    print(validate('13800138000', 'phone'))          # True
    print(validate('19212345678', 'phone'))          # False（第二位错误）
    print(validate('12345678901', 'phone'))          # False（第二位错误）
    print()
    
    print(validate('用户_123', 'username'))           # True
    print(validate('abc', 'username'))               # False（太短）
    print(validate('user@name', 'username'))         # False（包含特殊字符@）
    print()
    
    print(validate('abc123!', 'password'))           # True
    print(validate('abcdef', 'password'))            # False（只有字母）
    print(validate('123456', 'password'))            # False（只有数字）
    print(validate('a1!', 'password'))               # False（太短）
    print()
    
    print(validate('https://example.com', 'url'))    # True
    print(validate('ftp://files.example.com', 'url'))# True
    print(validate('example.com', 'url'))            # False（缺少协议）
