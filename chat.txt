import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

class EvalDataset:
    def __init__(self, result_path='inference_results.xlsx'):
        self.result_path = result_path

    def load_results(self):
        """读取保存的推理结果 Excel 文件，假设文件中有 'tokens' 和 'time' 列"""
        df = pd.read_excel(self.result_path)
        return df

    def calculate_avg_time_by_token_bins(self, df, bin_size=50):
        """根据 tokens 数分区间，并计算每个区间的平均推理时间"""
        max_tokens = df['tokens'].max()
        bins = list(range(0, max_tokens + bin_size, bin_size))
        
        # 使用 pandas 的 cut 函数将 tokens 分区间
        df['token_bin'] = pd.cut(df['tokens'], bins=bins, right=False)

        # 计算每个区间的平均推理时间
        avg_time_per_bin = df.groupby('token_bin')['time'].mean().reset_index()
        avg_time_per_bin['token_bin'] = avg_time_per_bin['token_bin'].astype(str)  # 转换为字符串便于绘图

        return avg_time_per_bin

    def plot_avg_time_by_token_bins(self, avg_time_per_bin, save_path='avg_time_by_token_bins.png'):
        """绘制不同 token 区间的平均推理时间柱状图"""
        plt.figure(figsize=(12, 6))
        plt.bar(avg_time_per_bin['token_bin'], avg_time_per_bin['time'], color='lightblue')
        plt.xlabel('Token Range')
        plt.ylabel('Average Inference Time (s)')
        plt.title('Average Inference Time by Token Range')
        plt.xticks(rotation=45, ha='right')  # 旋转 x 轴标签，便于查看
        plt.tight_layout()

        # 保存并显示图表
        plt.savefig(save_path)
        plt.show()
        print(f"Average inference time by token range plot saved to {save_path}")

if __name__ == "__main__":
    eval_dataset = EvalDataset(result_path='inference_results.xlsx')
    df = eval_dataset.load_results()

    # 计算每个 token 区间的平均推理时间
    avg_time_per_bin = eval_dataset.calculate_avg_time_by_token_bins(df, bin_size=50)

    # 绘制柱状图
    eval_dataset.plot_avg_time_by_token_bins(avg_time_per_bin)
