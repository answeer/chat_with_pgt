def get_plan(self, policies):
    def process_statement(stmt, scanner_default):
        skills = defaultdict(list)
        # Process Actions
        for action in stmt["Action"]:
            b_skill, ai_skill = action.split(":")
            default_skills = scanner_default.get(b_skill, [])
            if ai_skill == "*":
                skills[b_skill].extend(default_skills)
            else:
                skills[b_skill].ai_skill)
        # Process NotActions
        for no_action in stmt["NotAction"]:
            b_skill, ai_skill = no_action.split(":")
            current_skills = skills[b_skill]
            default_skills = scanner_default.get(b_skill, [])
            if ai_skill == "*":
                skills[b_skill] = [s for s in current_skills if s not in default_skills]
            else:
                if ai_skill in current_skills:
                    skills[b_skill].remove(ai_skill)
        return skills

    def update_execution_plan(plan, stmt_skills, conditions):
        for b_skill, ai_skills in stmt_skills.items():
            for ai_skill in ai_skills:
                plan.setdefault(b_skill, {})[ai_skill] = conditions.get(ai_skill, {})

    execution_plan = for policy in policies:
        policy_json = get_policy(policy)
        for stmt in policy_json["Statement"]:
            stmt_skills = process_statement(stmt, self.scanner_default)
            update_execution_plan(execution_plan, stmt_skills, stmt.get("Condition", {}))
    
    ordered_plan = self_plan(execution_plan)
    pprint(ordered_plan)
    return ordered_plan
