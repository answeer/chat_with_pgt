The ImageBlurCheck class is designed to detect blurry pages within a document by analyzing each page's blurriness score against a defined threshold. By identifying pages that fail this threshold, it flags the blurry pages, making this tool useful in workflows involving scanned documents or any document-dependent system requiring clear image quality.

Class Overview
This class extends a Scanner base class, implementing a blurriness evaluation to detect unclear or blurry pages. Each document page is converted into an image and assessed with a custom blurriness score function. Pages exceeding the threshold are flagged as blurry.

Core Components
Initialization (__init__ method):
Initializes ImageBlurCheck with:
score_thresh: Blurriness score threshold above which a page is considered blurry.
save_folder: Directory for saving images generated from document pages.
Suitability Placeholder (suitability_placeholder method):
A placeholder for calculating or retrieving the blurriness score. In a production setup, this might make API calls or invoke a local function for score computation.
Args: Takes image_path (file path to the page image).
Returns: A dictionary with a computed blurriness_score for the image.
Predict (predict method):
Processes the document to detect blurry pages.
Steps:
Converts document pages to images using the doc_to_img utility.
Iterates through each page image and calculates its blurriness score.
If the score exceeds score_thresh, the page index is flagged as blurry.
Args: image_path for the document to be analyzed.
Returns: A tuple with:
A list of page indices identified as blurry.
A score (0 if blurry pages are detected, 1 otherwise).
Response Formatting (format_response method):
Updates the response dictionary to include:
Blurness Check Prediction: List of blurry page indices.
Score: Indicates the presence or absence of blurry pages.
Brief Introduction
The ImageBlurCheck class identifies blurry pages in a document by evaluating each page's blurriness score, making it ideal for document-processing systems needing high-quality images. This is achieved through page-by-page analysis, flagging any pages that exceed a given blurriness threshold.
