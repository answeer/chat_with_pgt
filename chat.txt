from llm_sanitation.scanners.scanner_base import Scanner
import re
from llm_sanitation.logging.logging_setup import LogUtil, LogType, LogLevel

class RemoveNumbers(Scanner):
    """
    A Scanner class to remove numeric characters from text data.

    This class identifies and removes all numeric characters (digits) from the 
    provided text using a regular expression pattern. It extends the Scanner 
    base class and provides a sanitization feature specifically for numbers.

    Attributes:
        sanitize (bool): Flag to indicate whether to perform the sanitization.
    
    Methods:
        predict(data: str) -> tuple:
            Identifies and removes numeric characters from the input text data.
            Returns a tuple containing a score (1 for success, 0 for failure) 
            and the sanitized text.
        
        format_response() -> None:
            Formats the response by assigning the prediction and score to the 
            response dictionary.
    """

    def __init__(self, **kwargs):
        """
        Initializes the RemoveNumbers scanner.

        Args:
            sanitize (bool): Flag indicating whether the text should be sanitized.
        """
        sanitize = kwargs["sanitize"]
        super().__init__("remove_numbers", 0.5, sanitize=sanitize)

    def predict(self, data):
        """
        Identifies and removes numeric characters from the provided text data.

        Args:
            data (str): The input text from which numeric characters need to be removed.

        Returns:
            tuple: A tuple containing the score (1 for success, 0 for failure) 
                   and the sanitized text.
        """
        sanitized_data = data
        score = 0
        try:
            sanitized_data = re.sub(r'\d+', "", data)
            score = 1
        except Exception as e:
            LogUtil.log(LogType.ERROR, LogLevel.ERROR, e)

        return score, sanitized_data

    def format_response(self):
        """
        Formats the scanner's response.

        Assigns the prediction and score to the response dictionary, making them 
        available for further processing or output.
        """
        self.response["score"] = self.pred[0]
        self.response['sanitized_data'] = self.pred[1]
