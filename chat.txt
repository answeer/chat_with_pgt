import cv2
import numpy as np
import os
import random
from typing import List

# 保留原有的所有噪音处理函数...
# [保持原有所有 img_* 和 gussis_noise 函数不变] 

def apply_random_effects(image: np.ndarray, 
                        num_effects: int = 3,
                        effect_list: List[str] = None) -> np.ndarray:
    """
    随机应用多种噪音效果到图像
    :param image: 输入图像(BGR格式)
    :param num_effects: 要应用的噪音效果数量
    :param effect_list: 指定可选的噪音效果列表(默认使用全部)
    :return: 处理后的图像，应用的效果名称列表
    """
    # 可用的噪音效果列表
    foreground_mapping = {
        # [保持原有mapping字典内容不变]
        'white-lines': img_white_dash,
        'vertical-lines': vertical_lines,
        # ... 其他所有效果 ...
        'gussis_noise': gussis_noise
    }

    # 可选效果过滤
    available_effects = list(foreground_mapping.keys())
    if effect_list:
        available_effects = [e for e in effect_list if e in foreground_mapping]

    # 确保num_effects不超过可用效果数量
    num_effects = min(num_effects, len(available_effects))
    
    # 随机选择效果（允许重复）
    selected_effects = random.choices(available_effects, k=num_effects)
    
    # 应用效果
    processed_image = image.copy()
    applied_effects = []
    
    for effect_name in selected_effects:
        try:
            processed_image = foreground_mapping[effect_name](processed_image)
            applied_effects.append(effect_name)
        except Exception as e:
            print(f"应用效果 {effect_name} 失败: {str(e)}")
    
    return processed_image, applied_effects

def process_batch_images(input_dir: str,
                        output_dir: str,
                        num_effects: int = 3,
                        effect_list: List[str] = None):
    """
    批量处理图像
    :param input_dir: 输入目录路径
    :param output_dir: 输出目录路径
    :param num_effects: 每个图像应用的噪音效果数量
    :param effect_list: 指定可选的噪音效果列表
    """
    # 创建输出目录
    os.makedirs(output_dir, exist_ok=True)
    
    # 遍历输入目录
    for filename in os.listdir(input_dir):
        # 过滤图像文件
        if not filename.lower().endswith(('.png', '.jpg', '.jpeg')):
            continue
            
        # 读取图像
        input_path = os.path.join(input_dir, filename)
        image = cv2.imread(input_path)
        if image is None:
            print(f"无法读取图像: {input_path}")
            continue
            
        # 应用随机效果
        processed_image, effects_used = apply_random_effects(
            image, 
            num_effects=num_effects,
            effect_list=effect_list
        )
        
        # 生成输出文件名
        base_name = os.path.splitext(filename)[0]
        effects_str = "+".join(effects_used)
        output_filename = f"{base_name}_{effects_str}.png"
        output_path = os.path.join(output_dir, output_filename)
        
        # 保存图像
        cv2.imwrite(output_path, processed_image)
        print(f"已保存: {output_path}")

if __name__ == "__main__":
    # 使用示例
    input_directory = "input_images"
    output_directory = "processed_output"
    
    # 可选参数配置示例：
    # 指定只使用这些效果
    selected_effects = [
        'gussis_noise',
        'vertical-lines',
        'inkbleed',
        'scribbles'
    ]
    
    process_batch_images(
        input_dir=input_directory,
        output_dir=output_directory,
        num_effects=2,  # 每张图随机选2种效果
        effect_list=selected_effects  # 可选项，不指定则使用全部效果
    )
