import json
import os
import pandas as pd
import streamlit as st

# Step 1: 读取JSON文件
def load_json(file_path):
    with open(file_path, 'r') as f:
        data = json.load(f)
    return data

# Step 2: 提取extracted_values.page_data.values并转换为表格
def extract_values(data):
    extracted_values = []
    for item in data['extracted_values']:
        page_data = item['page_data']
        for value in page_data['values']:
            extracted_values.append({
                'doc_id': item['doc_id'],
                'page_number': item['page_number'],
                'entity_name': value['entity_name'],
                'pred_ref_id': value['pred_ref_id'],
                'value': value['value'],
                'confidence': value['confidence']
            })
    return pd.DataFrame(extracted_values)

# Step 3: 在Streamlit中显示表格并设置可编辑列
def main():
    st.title("JSON数据处理与编辑")
    
    # 输入JSON文件路径
    file_path = st.text_input("输入JSON文件路径")
    if file_path:
        data = load_json(file_path)
        df = extract_values(data)
        
        # 显示表格
        st.write("数据表格：")
        edited_values = []
        for index, row in df.iterrows():
            # 提供下拉菜单供用户编辑value列
            selected_value = st.selectbox(
                f'选择 {row["entity_name"]} 的值 (行 {index + 1})',
                options=["correct_redact", "wrong_redact", "entity_not_found"],
                index=["correct_redact", "wrong_redact", "entity_not_found"].index(row['value'])
            )
            edited_values.append(selected_value)
        
        df['value'] = edited_values
        st.dataframe(df)  # 显示编辑后的表格
        
        # 提交按钮
        if st.button("提交"):
            # 更新原始数据中的values
            for index, row in df.iterrows():
                for item in data['extracted_values']:
                    if item['doc_id'] == row['doc_id'] and item['page_number'] == row['page_number']:
                        for value in item['page_data']['values']:
                            if value['pred_ref_id'] == row['pred_ref_id']:
                                value['value'] = row['value']
            
            # 获取保存路径（与输入文件同级目录）
            dir_name = os.path.dirname(file_path)
            save_path = os.path.join(dir_name, 'updated_data.json')
            
            # 保存为新的JSON文件
            with open(save_path, 'w') as f:
                json.dump(data, f, indent=4)
            st.success(f"数据已更新并保存为 {save_path}")

if __name__ == "__main__":
    main()
