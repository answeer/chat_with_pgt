def main(template_path, filled_slip_folder, excel_path, output_folder):
    # Load template
    template = cv2.imread(template_path, cv2.IMREAD_GRAYSCALE)
    if template is None:
        print(f"Error: Cannot load template image from {template_path}")
        return

    # Load Excel with bounding box information
    df = pd.read_excel(excel_path)
    os.makedirs(output_folder, exist_ok=True)

    for idx, row in tqdm(df.iterrows(), total=len(df)):
        name = row["name"]
        x_min, y_min, x_max, y_max = row["x-min"], row["y-min"], row["x-max"], row["y-max"]

        # Match name to file
        target_path = find_matching_file(name, filled_slip_folder)
        if target_path is None:
            continue

        # Load target image
        target = cv2.imread(target_path, cv2.IMREAD_GRAYSCALE)
        if target is None:
            print(f"[ERROR] Cannot load target image from {target_path}")
            continue

        # Align image
        aligned_image, matrix = align_image(template, target)

        # Transform bounding box coordinates
        bounding_boxes = [(x_min, y_min, x_max, y_max)]
        transformed_boxes = transform_coordinates(bounding_boxes, matrix, aligned_image.shape)

        # Draw bounding boxes on aligned image
        image_with_boxes = draw_bounding_boxes(aligned_image, transformed_boxes)

        # Save results
        output_image_path = os.path.join(output_folder, f"aligned_{name}.jpg")
        cv2.imwrite(output_image_path, image_with_boxes)
