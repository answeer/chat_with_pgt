import json
import pandas as pd
import streamlit as st

# Step 1: 读取JSON文件
def load_json(file):
    with open(file, 'r') as f:
        data = json.load(f)
    return data

# Step 2: 提取extracted_values.page_data.values并转换为表格
def extract_values(data):
    extracted_values = []
    for item in data['extracted_values']:
        page_data = item['page_data']
        for value in page_data['values']:
            extracted_values.append({
                'doc_id': item['doc_id'],
                'page_number': item['page_number'],
                'entity_name': value['entity_name'],
                'pred_ref_id': value['pred_ref_id'],
                'value': value['value'],
                'confidence': value['confidence']
            })
    return pd.DataFrame(extracted_values)

# Step 3: 在Streamlit中显示表格并设置可编辑列
def main():
    st.title("JSON数据处理与编辑")
    
    # 上传JSON文件
    uploaded_file = st.file_uploader("上传JSON文件", type="json")
    if uploaded_file is not None:
        data = json.load(uploaded_file)
        df = extract_values(data)
        
        # 提供下拉菜单供用户编辑value列
        options = ["correct_redact", "wrong_redact", "entity_not_found"]
        df['value'] = df['value'].apply(lambda x: st.selectbox('Select value', options, index=options.index(x)))
        
        # 提交按钮
        if st.button("提交"):
            # 更新原始数据中的values
            for index, row in df.iterrows():
                for item in data['extracted_values']:
                    if item['doc_id'] == row['doc_id'] and item['page_number'] == row['page_number']:
                        for value in item['page_data']['values']:
                            if value['pred_ref_id'] == row['pred_ref_id']:
                                value['value'] = row['value']
            
            # 保存为新的JSON文件
            with open('updated_data.json', 'w') as f:
                json.dump(data, f, indent=4)
            st.success("数据已更新并保存为 updated_data.json")

if __name__ == "__main__":
    main()
