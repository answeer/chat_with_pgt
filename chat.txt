import json
import os
from typing import Dict, List, Any

def load_execution_plan(policy_names: List[str], policy_dir: str = "policies") -> Dict[str, Any]:
    """
    加载策略执行计划
    
    :param policy_names: 需要加载的策略名称列表
    :param policy_dir: 策略文件存储目录，默认为"policies"
    :return: 结构化的执行计划字典
    """
    execution_plan = {}
    
    for policy_name in policy_names:
        file_path = os.path.join(policy_dir, f"{policy_name}.json")
        
        try:
            # 读取策略文件
            with open(file_path, 'r') as f:
                policy = json.load(f)
            
            # 提取条件数据
            conditions = []
            for statement in policy.get("Statement", []):
                # 合并通用条件和特殊条件
                condition = {
                    "policy_meta": {
                        "id": statement.get("id"),
                        "name": statement.get("name"),
                        "type": statement.get("Type")
                    },
                    ​**statement.get("Condition", {})
                }
                conditions.append(condition)
            
            # 存储到执行计划
            execution_plan[policy_name] = {
                "version": policy.get("Version"),
                "conditions": conditions
            }
            
        except FileNotFoundError:
            print(f"警告：策略文件 {policy_name} 不存在")
            execution_plan[policy_name] = None
        except json.JSONDecodeError:
            print(f"错误：策略文件 {policy_name} 格式错误")
            execution_plan[policy_name] = None
        except Exception as e:
            print(f"处理 {policy_name} 时发生未知错误: {str(e)}")
            execution_plan[policy_name] = None
            
    return execution_plan

# 示例用法
if __name__ == "__main__":
    # 假设从上一阶段获取到的策略列表
    policy_list = [
        "001_free_text_bounding_policy",
        "002_free_text_sanitation_policy",
        "000_payload_validation_policy"
    ]
    
    # 加载执行计划
    plan = load_execution_plan(policy_list)
    
    # 存储执行计划到文件（可选）
    with open("execution_plan.json", "w") as f:
        json.dump(plan, f, indent=2)
    
    # 打印执行计划结构
    print("生成执行计划结构：")
    for policy_name, data in plan.items():
        print(f"\n策略：{policy_name}")
        print(f"版本：{data['version']}") if data else None
        if data and data["conditions"]:
            print("条件配置：")
            for idx, cond in enumerate(data["conditions"], 1):
                print(f"  Statement {idx}:")
                for k, v in cond.items():
                    print(f"    {k}: {v}")
