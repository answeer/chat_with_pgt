from fontTools.ttLib import TTFont
from fontTools.subset import makeSubsetFont

def load_fonts(page, text_blocks):
    """
    Load only the necessary fonts and apply font subsetting

    :param page: The `page` parameter is an object representing a page in a document where fonts need
    to be loaded
    :param text_blocks: A list of text blocks extracted from the PDF page
    :return: Returns the updated `page` object with inserted fonts and a `font_mapping` dictionary that
    maps font names to font identifiers.
    """

    font_mapping = {}
    font_path = r"C:\path\to\fonts"  # Path to your font directory

    used_fonts = set()
    for block in text_blocks:
        font_name = block["font"]
        used_fonts.add(font_name)

    for font_name in used_fonts:
        font_file = os.path.join(font_path, font_name + ".ttf")
        font_id = "EXT_" + font_name.replace("-", "")

        # Apply font subsetting
        font = TTFont(font_file)
        subset_font = makeSubsetFont(font, text_blocks)
        subset_font.save(font_file + "_subset.ttf")

        page.insert_font(fontname=font_id, fontfile=font_file + "_subset.ttf")
        font_mapping[font_name] = font_id

    return page, font_mapping
