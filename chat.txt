from llm_sanitation.scanners.scanner_base import Scanner
from llm_sanitation.utils.models import *
from llm_sanitation.logging.logging_setup import LogUtil, LogType, LogLevel

class TextLength(Scanner):

    def __init__(self, **kwargs):
        min_len = kwargs["min_len"]
        max_len = kwargs["max_len"]
        super().__init__("text_length", 0.5,min_len=min_len,max_len=max_len)

    def predict(self, data):
        score = 0
        try:
            text_length = len(data.split())
            if text_length < self._kwargs['max_len'] and text_length > self._kwargs['min_len']:
                score = 1
        except Exception as e:
            LogUtil.log(LogType.ERROR, LogLevel.ERROR, e)
            text_length = "Error occured: {}".format(e)
        return text_length,score

    def format_response(self):
        self.response["prediction"]["text_length"] = self.pred[0]
        self.response["score"] = self.pred[1]
