    def predict(self,data):
        scripts = []
        scores = []
        fix_value = data
        if "HTML" in self.languages['languages']:
            clean_output = bleach.clean(data,strip=True)
            if clean_output != data:
                scripts.append('HTML')
                scores.append(0)
                if self._kwargs['sanitize']:
                    data = clean_output
        languages = self.transformer_pipe(data)
        for language in languages:
            language_name = language["label"]
            score = round(language["score"], 2)
            if score < self.score_thresh or language_name not in self.languages['languages']:
                continue

            if self._kwargs['sanitize']:
                fix_value = self.sanitized_text(data,language_name)
            else:
                fix_value = data
            scripts.append(language_name)
            scores.append(1 - score)
        if len(scripts) != 0:
            predict = "Found executavle scripts: {}.".format(', '.join(scripts))
            predict_score = np.mean(scores)
        else:
            predict = "No executable scripts found."
            predict_score = 1
        return predict, predict_score, fix_value
